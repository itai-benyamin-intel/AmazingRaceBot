# Telegram Bot Configuration
telegram:
  bot_token: "YOUR_BOT_TOKEN_HERE"  # Get from @BotFather on Telegram

# Game Configuration
game:
  name: "AmazingRaceBot"
  max_teams: 10
  max_team_size: 5
  
  # Challenge definitions
  # Note: Challenges are completed sequentially - teams must complete
  # challenge 1 before they can attempt challenge 2, and so on.
  # 
  # Challenge Types:
  # - photo: Teams submit photos (e.g., team photo at location, completed puzzle)
  # - riddle: Teams solve riddles/puzzles and submit text answer
  # - code: Teams write/debug code and submit solution
  # - multi_choice: Teams answer multi choice questions
  # - text: General text submission challenge
  # - scavenger: Teams find and document items (via photos)
  # - team_activity: Teams perform activities (verified by photo/video)
  # - decryption: Teams decrypt encoded messages
  # - tournament: Teams compete in bracket-style tournaments
  #
  # Verification Methods:
  # - answer: Text answer that must match (case-insensitive, trimmed)
  # - photo: Requires photo submission (manual admin verification)
  #   - photos_required: Optional number of photos required (default: 1)
  #     Teams see a counter showing progress (e.g., "2/5 photos submitted")
  #     Challenge completes only when all required photos are approved
  # - video: Requires video submission (manual admin verification)
  #   - Works the same as 'photo' but expects video files
  #   - Can be combined with requires_photo_verification for location verification
  # - tournament: Admin reports match results to determine winners
  #
  # Photo Verification for Location Arrival:
  # - requires_photo_verification: Optional boolean field per challenge
  #   - When true: Teams must send a location photo before viewing challenge details
  #   - When false: Teams can view challenge details without photo verification
  #   - When omitted: Uses global photo_verification_enabled setting (for challenges 2+)
  #   - Note: Challenge 1 never requires photo verification regardless of settings
  challenges:
    - id: 1
      name: "Find the Landmark"
      description: "Take a team photo with the city skyline in the background"
      location: "Downtown Viewpoint"
      type: "photo"
      verification:
        method: "photo"
      # Optional: Hints (up to 3 hints per challenge)
      # Each hint costs a penalty (default 2 minutes) when the next challenge is unlocked
      # Use timeout_penalty_minutes to customize the penalty per hint for this challenge
      hints:
        - "Look for the tallest building in the area"
        - "The viewpoint is near the waterfront"
        - "Check the tourist information center for directions"
      # Optional: Custom timeout penalty per hint in minutes (default: 2)
      # This affects how long teams must wait before the next challenge unlocks
      # timeout_penalty_minutes: 2
      # Optional: Custom success message shown after completing the challenge
      # This message is sent in addition to the standard completion confirmation
      success_message: "ðŸŽ‰ Great job finding the landmark! Head to the library for your next challenge."
      
    - id: 2
      name: "Riddle Master"
      description: "I stand tall where knowledge flows, students gather in my shadow's throes. What am I?"
      location: "Campus"
      type: "riddle"
      verification:
        method: "answer"
        answer: "library"
      # Optional: Require photo verification before revealing this challenge
      # When true, teams must send a location photo before seeing challenge details
      # When false or omitted, uses global photo_verification_enabled setting
      requires_photo_verification: true
      # Optional: Image to send with the challenge (can be URL or local path)
      # image_url: "https://example.com/riddle_image.jpg"  # Remote image via HTTPS
      # image_path: "images/riddle_building.png"           # Local image from images/ directory
      hints:
        - "Think about where students study"
        - "It's a building full of books"
      # Optional: Images for hints (can be mixed with text hints)
      # hint_images:
      #   0: "images/hint1.jpg"  # Image for first hint (index 0)
      #   1: "https://example.com/hint2.jpg"  # Image for second hint (index 1)
      # Optional: Custom timeout penalty (3 minutes for this challenge instead of default 2)
      timeout_penalty_minutes: 3
      success_message: "ðŸ§© Excellent! The library it is. Your next challenge involves some coding skills!"
      
    - id: 3
      name: "Code Debug"
      description: |
        Fix this Python function to correctly calculate Fibonacci numbers:
        
        def fib(n):
            if n <= 1:
                return 1  # Bug: should return n
            return fib(n-1) + fib(n-2)
        
        What should fib(5) return? Submit the correct result.
      location: "Lab A"
      type: "code"
      verification:
        method: "answer"
        # For code challenges, use acceptable_answers to provide multiple valid formats
        acceptable_answers:
          - "5"           # Just the number
          - "five"        # Written out
          - "answer is 5" # In a sentence
        # Alternative: use a single answer keyword that must appear
        # answer: "fibonacci"
      # This challenge doesn't require location verification (multi_choice/puzzle-based)
      requires_photo_verification: false
      
    - id: 4
      name: "Tech Multi Choice"
      description: "Name three inventors who contributed to the development of the modern computer (comma-separated)"
      location: "Anywhere"
      type: "multi_choice"
      verification:
        method: "answer"
        answer: "turing, lovelace, babbage"  # Accept if contains these names
      
    - id: 5
      name: "Capital Cities Checklist"
      description: "Name 5 capital cities from different continents"
      location: "Anywhere"
      type: "multi_choice"
      verification:
        method: "answer"
        # Checklist mode: participants can submit items one at a time or all at once
        # Each item is tracked individually, and the challenge completes when all items are submitted
        checklist_items:
          - "Tokyo"
          - "Paris"
          - "Cairo"
          - "Brasilia"
          - "Canberra"
      hints:
        - "Think about each continent: Asia, Europe, Africa, South America, Australia"
        - "Japan's capital, France's capital, Egypt's capital..."
      
    - id: 6
      name: "Team Pyramid"
      description: "Create a human pyramid with your team"
      location: "Outdoor Area"
      type: "team_activity"
      verification:
        method: "photo"
      
    # Example challenge with video verification
    # - id: 7
    #   name: "Stars"
    #   description: |
    #     It's time to direct and film a short video that highlights a situation showing what it's like to work as uCode Engineers! ðŸŽ¬
    #     - **Length:** Keep it between 30 seconds and 1 minute max.
    #     - **Participation:** Every team member must be in the video (including the person running the camera!).
    #   location: "Mishmar HaCarmel Farm"
    #   type: "team_activity"
    #   verification:
    #     method: "video"
    #   requires_photo_verification: true  # Optional: require location photo before challenge reveal
    #   success_message: "Good Job, you are almost there!"
      
    - id: 7
      name: "Scavenger Hunt"
      description: "Find and photograph 5 different types of transportation in the area"
      location: "Campus Area"
      type: "scavenger"
      verification:
        method: "photo"
        photos_required: 5  # Require 5 photos to complete this challenge
      
    - id: 8
      name: "Secret Message"
      description: "Decode this Caesar cipher (shift 3): Frqjudwxodwxodwlrqv"
      location: "Anywhere"
      type: "decryption"
      verification:
        method: "answer"
        answer: "congratulations"
    
    # Example challenge with image question (image-based challenge)
    # - id: 9
    #   name: "Identify the Landmark"
    #   description: "What famous landmark is shown in this image?"
    #   location: "Anywhere"
    #   type: "riddle"
    #   verification:
    #     method: "answer"
    #     answer: "eiffel tower"
    #   # Image sent with the challenge as the question
    #   image_url: "https://example.com/landmark.jpg"  # Remote image
    #   # OR use a local image:
    #   # image_path: "images/landmark.jpg"
    #   hints:
    #     - "This landmark is in France"
    #     - "It was built for the 1889 World's Fair"
    #   # Optional: Add images to hints
    #   hint_images:
    #     0: "images/france_map.jpg"  # Image for first hint
    
    # Example tournament challenge (optional - for advanced events)
    # Tournament challenges create bracket-style competitions between teams
    # Tournaments are automatically created when teams reach this challenge
    # - id: 9
    #   name: "Team Championship"
    #   description: "Teams will compete in a tournament-style rock-paper-scissors championship"
    #   location: "Arena"
    #   type: "tournament"
    #   verification:
    #     method: "tournament"
    #   tournament:
    #     game_name: "Rock Paper Scissors"  # Required: Name of the game/competition
    #     timeout_minutes: 5  # Optional: Penalty timeout for last-place team (default: 5 minutes)

# Admin user (Telegram user ID)
# Note: Only one admin is allowed
admin: 123456789  # Replace with actual admin user ID
